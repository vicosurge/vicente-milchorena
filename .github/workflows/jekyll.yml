# This workflow builds and deploys a Jekyll site to GitHub Pages and generates a PDF version
name: Deploy Jekyll site to Pages with PDF

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write  # Changed from 'read' to 'write' to allow PDF commits
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Ruby
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: '3.1'
          bundler-cache: true
          cache-version: 0
          
      - name: Configure Bundler for GitHub Actions
        run: |
          bundle config set --local deployment false
          bundle config set --local path vendor/bundle
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        
      - name: Build with Jekyll
        run: |
          bundle install
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js for PDF generation
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Puppeteer
        run: npm install puppeteer
        
      - name: Create PDF generation script
        run: |
          cat > generate-pdf.js << 'EOF'
          const puppeteer = require('puppeteer');
          const fs = require('fs');
          const path = require('path');
          
          (async () => {
            const browser = await puppeteer.launch({
              headless: true,
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });
            
            const page = await browser.newPage();
            
            // Load the built Jekyll site
            const htmlPath = path.join(process.cwd(), '_site/index.html');
            const htmlContent = fs.readFileSync(htmlPath, 'utf8');
            
            // Create PDF-specific styles
            const pdfStyles = `
              <style>
                /* PDF Page Setup */
                @page {
                  margin: 0.75in 0.75in 1in 0.75in;
                  size: letter;
                }
                
                body { 
                  font-family: "Times New Roman", serif; 
                  line-height: 1.5; 
                  color: #000; 
                  font-size: 11pt;
                  margin: 0;
                  padding: 0;
                }
                
                /* Hide web elements */
                .pdf-download { display: none !important; }
                .profile-photo { display: none !important; }
                img { display: none !important; }
                .cv-container { max-width: none; margin: 0; padding: 0; box-shadow: none; }
                
                /* Header styling */
                h1 { 
                  font-size: 22pt; 
                  font-weight: bold; 
                  text-align: center; 
                  margin-bottom: 8pt;
                  color: #1a365d;
                  letter-spacing: 0.5pt;
                  page-break-after: avoid; 
                }
                
                /* Contact information */
                .contact-info { 
                  text-align: center; 
                  margin-bottom: 20pt; 
                  font-size: 10pt; 
                  color: #2d3748;
                  border-bottom: 1pt solid #e2e8f0;
                  padding-bottom: 12pt;
                }
                .contact-info p { margin-bottom: 3pt; }
                .contact-info strong { color: #1a365d; }
                
                /* Section headers */
                h2 { 
                  font-size: 14pt; 
                  font-weight: bold; 
                  margin-top: 20pt; 
                  margin-bottom: 12pt; 
                  padding: 6pt 0 4pt 0;
                  border-bottom: 2pt solid #1a365d; 
                  color: #1a365d;
                  text-transform: uppercase;
                  letter-spacing: 1pt;
                  page-break-after: avoid; 
                }
                h2::after { display: none; }
                
                /* Job entries */
                h3 { 
                  font-size: 12pt; 
                  font-weight: bold; 
                  margin-top: 16pt; 
                  margin-bottom: 6pt; 
                  padding: 8pt 12pt;
                  background: #f7fafc;
                  border-left: 4pt solid #1a365d;
                  color: #1a365d;
                  page-break-after: avoid;
                  border-radius: 3pt;
                }
                
                /* Job dates */
                h3 + p { 
                  font-size: 10pt; 
                  color: #4a5568; 
                  font-style: italic; 
                  margin: 0 0 8pt 12pt;
                  font-weight: 500;
                }
                
                /* Job descriptions */
                h3 ~ p { 
                  color: #2d3748; 
                  margin: 8pt 12pt 8pt 12pt; 
                  line-height: 1.5;
                  text-align: justify;
                }
                
                /* Bullet lists */
                h3 ~ ul { 
                  margin: 8pt 12pt 12pt 30pt;
                  padding: 0;
                }
                
                h3 ~ li { 
                  margin-bottom: 4pt; 
                  color: #2d3748; 
                  line-height: 1.4;
                }
                
                /* Skills and technologies */
                p strong { 
                  color: #1a365d; 
                  margin-top: 8pt; 
                  margin-bottom: 4pt; 
                  display: inline-block;
                  font-weight: bold;
                }
                
                /* Skills paragraphs */
                h3 ~ p:has(strong) {
                  background: #f7fafc;
                  padding: 6pt 12pt 10pt 12pt;
                  margin: 0;
                  border-radius: 0 0 3pt 3pt;
                }
                
                /* Profile section - fix the styling inconsistency */
                h2:contains("Profile") ~ p {
                  font-size: 11pt;
                  line-height: 1.6;
                  margin: 0 0 12pt 0;
                  text-align: justify;
                  color: #2d3748;
                  background: transparent;
                  padding: 0;
                  border: none;
                  border-radius: 0;
                }
                
                /* First paragraph after Profile header */
                h2:contains("Profile") + p {
                  margin-top: 0;
                }
                
                /* Links */
                a { 
                  color: #1a365d; 
                  text-decoration: none;
                  font-weight: 500;
                }
                
                /* Add subtle URLs for important links */
                a[href^="mailto:"]::after {
                  content: "";
                }
                
                a[href^="https://www.linkedin.com"]::after {
                  content: " (LinkedIn)";
                  font-size: 9pt;
                  color: #718096;
                }
                
                a[href^="https://github.com"]::after {
                  content: " (GitHub)";
                  font-size: 9pt;
                  color: #718096;
                }
                
                /* Certification links */
                a[href*="learn.microsoft.com"]::after,
                a[href*="credentials"]::after {
                  content: " (Verify Online)";
                  font-size: 8pt;
                  color: #718096;
                  font-style: italic;
                }
                
                /* Horizontal rules */
                hr { 
                  border: none; 
                  border-top: 1pt solid #e2e8f0; 
                  margin: 16pt 0;
                }
                
                /* Education and Certifications */
                h2:contains("Education") ~ h3,
                h2:contains("Certifications") ~ h3 {
                  background: #edf2f7;
                  border-left-color: #4a5568;
                  color: #2d3748;
                }
                
                /* Certification list */
                h2:contains("Certifications") ~ ul {
                  margin-left: 12pt;
                }
                
                h2:contains("Certifications") ~ li {
                  margin-bottom: 6pt;
                  line-height: 1.4;
                }
                
                /* Page breaks */
                .page-break { page-break-before: always; }
                .no-break { page-break-inside: avoid; }
                
                /* Ensure job entries don't break awkwardly */
                h3, h3 + p, h3 + p + p { page-break-inside: avoid; }
              </style>
            `;
            
            // Remove images and add PDF-specific styles
            let pdfHtml = htmlContent.replace(/<img[^>]*>/gi, ''); // Remove all img tags
            pdfHtml = pdfHtml.replace('</head>', pdfStyles + '</head>');
            
            await page.setContent(pdfHtml, { waitUntil: 'networkidle0' });
            
            await page.pdf({
              path: '_site/vicente-munoz-cv.pdf',
              format: 'A4',
              margin: {
                top: '1in',
                right: '0.75in',
                bottom: '1in',
                left: '0.75in'
              },
              printBackground: true,
              preferCSSPageSize: true
            });
            
            await browser.close();
            console.log('PDF generated successfully at _site/vicente-munoz-cv.pdf');
          })();
          EOF
          
      - name: Generate PDF
        run: node generate-pdf.js
          
      - name: Upload artifact (including PDF)
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
